/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SubmissionsRouteImport } from './routes/submissions'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as NotificationsRouteImport } from './routes/notifications'
import { Route as CoursesRouteImport } from './routes/courses'
import { Route as IndexRouteImport } from './routes/index'

const SubmissionsRoute = SubmissionsRouteImport.update({
  id: '/submissions',
  path: '/submissions',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificationsRoute = NotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesRoute = CoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/courses': typeof CoursesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/submissions': typeof SubmissionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/courses': typeof CoursesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/submissions': typeof SubmissionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/courses': typeof CoursesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/submissions': typeof SubmissionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/courses' | '/notifications' | '/profile' | '/submissions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/courses' | '/notifications' | '/profile' | '/submissions'
  id:
    | '__root__'
    | '/'
    | '/courses'
    | '/notifications'
    | '/profile'
    | '/submissions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CoursesRoute: typeof CoursesRoute
  NotificationsRoute: typeof NotificationsRoute
  ProfileRoute: typeof ProfileRoute
  SubmissionsRoute: typeof SubmissionsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/submissions': {
      id: '/submissions'
      path: '/submissions'
      fullPath: '/submissions'
      preLoaderRoute: typeof SubmissionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CoursesRoute: CoursesRoute,
  NotificationsRoute: NotificationsRoute,
  ProfileRoute: ProfileRoute,
  SubmissionsRoute: SubmissionsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
